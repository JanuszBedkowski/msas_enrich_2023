<?xml version="1.0"?>
<launch>
  <!-- <include file="$(find jackal_bringup)/launch/include/xsens_driver2.launch" /> -->

  <!-- <include file="$(find jackal_bringup)/launch/include/move_base.launch" /> -->

  <include file="$(find jackal_description)/launch/description.launch" />
<!--
  <node pkg="mandala_small_rot" type="swing.py" name="mandala_small_rot"/> -->

  <node pkg="jackal_base" type="jackal_node" name="jackal_node">
    <param name="wireless_interface" value="wlan0" />
    <param name="port" value="/dev/ttyACM0"/>
  </node>
  <node pkg="quasi_autonomy" type="quasiAutonomy.py" name="quasiAutonomy" />

  <!-- TODO: Eliminate this by compiling the necessary message definitions into jackal_base. -->
  <node pkg="rosserial_python" type="message_info_service.py" name="rosserial_message_info" />

  <!-- Translate Sentence messages from the MCU to NavSatFix messages -->
  <!--<node pkg="nmea_navsat_driver" type="nmea_topic_driver" name="nmea_topic_driver" ns="navsat" />-->

  <!-- Filter raw gyro data into a usable IMU message -->
  <!--<node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter">
    <rosparam file="/home/robot/catkin_ws/src/jackal_robot/jackal_base/config/mag_config_default.yaml" />
    <rosparam>
      gain: 0.1
      zeta: 0.001
      publish_tf: false
    </rosparam>
  </node>
  -->

  <!-- Differential controller and EKF-->
  <include file="$(find jackal_control)/launch/control.launch" />

  <!-- Teleoperation via joystick and rviz interactive markers -->
  <include file="$(find jackal_control)/launch/teleop.launch" />


  <!--<include file="$(find jackal_bringup)/launch/include/m3d.launch" />-->
  <!--<include file="$(find jackal_bringup)/launch/include/odo_vr.launch" />-->

  <!--<node pkg="traversability_grid" type="traversability_grid" name="traversability_grid"/>-->

  <!--<node pkg="asset_sync_robot" type="asset_sync_robot.py" name="asset_sync_robot"/>-->


  <!-- Diagnostic Aggregator for robot monitor usage -->
  <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator">
    <rosparam command="load" file="$(find jackal_base)/config/diagnostic_analyzers.yaml" />
  </node>

<!-- <group ns="optris"> -->
<!--  -->
<!--   <node name="optris_imager_node" pkg="optris_drivers" type="optris_imager_node" output="screen"> -->
<!--     <param name="xmlConfig"      type="string" value="$(find optris_drivers)/config/generic.xml"/> -->
<!--   </node> -->
<!--  -->
<!--   <node name="optris_colorconvert_node" pkg="optris_drivers" type="optris_colorconvert_node" output="screen"> -->
<!--     <param name="palette"            type="int"    value="6"/>   -->
<!--     <param name="paletteScaling"     type="int"    value="2"/>  -->
<!--     <param name="temperatureMin"     type="double" value="20"/> -->
<!--     <param name="temperatureMax"     type="double" value="40"/> -->
<!--     <param name="looprate"           type="double" value="30"/> -->
<!--     <param name="camera_name"        type="string" value="optris_imager"/>   -->
<!--     <param name="camera_info_url"    type="string" value="file://$(optenv ROS_HOME /tmp/.ros)/camera_info/optris_imager.yaml"/>  -->
<!--   </node> -->
<!--  -->
<!--   <node name="image_proc" pkg="image_proc" type="image_proc"/> -->
<!-- </group> -->
<!--  -->
<!--  -->
<!--   <arg name="FPS" default="15"/>-->
<!--   <arg name="CalibrationFile" default="/home/robot/pointgrey.yaml"/>-->
<!--  -->
<!--  -->
<!--   <node pkg="pointgrey" type="grasshopper3" name="pointgrey_grasshopper3" output="screen">-->
<!--      <param name="fps" value="$(arg FPS)"/>-->
<!--      <param name="calibrationfile" value="$(arg CalibrationFile)"/>-->
<!--      <remap from="image_raw" to="camera/image_raw"/>-->
<!--   </node>-->

<!--   <node pkg="image_transport" type="republish" name="republish_rgb" args="raw in:=/camera/image_raw compressed out:=/camera/image_raw"/>-->

<arg name="camera_topic" default="/camera/image_color"/>
<arg name="models_dir" default="$(find object_detection_tensorflow)/models"/>

<!-- <arg name="model_name" default="ssd_mobilenet_v2_coco_2018_03_29"/>
<arg name="path_to_labels" default="$(find object_detection_tensorflow)/data/mscoco_label_map.pbtxt"/>
<arg name="num_classes" default="90"/> -->

<arg name="model_name" default="opi8-000"/>
<arg name="path_to_labels" default="$(find object_detection_tensorflow)/models/opi8-000/opi-8-labels.pbtxt"/>
<arg name="num_classes" default="8"/>


<!-- <arg name="model_name" default="model-ERL2017-001"/>
<arg name="path_to_labels" default="$(find object_detection_tensorflow)/ERL2017-ERL2018-Emergency-Object-Detection/labels/label_map-opi.pbtxt"/>
<arg name="num_classes" default="7"/> -->

<!-- <arg name="model_name" default="model-ERL2017-002"/>
<arg name="path_to_labels" default="$(find object_detection_tensorflow)/ERL2017-ERL2018-Emergency-Object-Detection/labels/label_map-opi.pbtxt"/>
<arg name="num_classes" default="7"/> -->

<!-- <arg name="model_name" default="model-ERL2018-7classes-001"/>
<arg name="path_to_labels" default="$(find object_detection_tensorflow)/ERL2017-ERL2018-Emergency-Object-Detection/labels/label_map-opi.pbtxt"/>
<arg name="num_classes" default="7"/> -->




<!-- <arg name="model_name" default="model-ERL2018-8classes-001"/>
<arg name="path_to_labels" default="$(find object_detection_tensorflow)/ERL2017-ERL2018-Emergency-Object-Detection/labels/label_map-opi-2018.pbtxt"/>
<arg name="num_classes" default="8"/> -->




<!-- <arg name="model_name" default="model-ERL2018-11classes-001"/>
<arg name="path_to_labels" default="$(find object_detection_tensorflow)/ERL2017-ERL2018-Emergency-Object-Detection/labels/label_map-opi-2018-ericard.pbtxt"/>
<arg name="num_classes" default="11"/> -->

<!-- <arg name="model_name" default="model-ERL2018-11classes-002"/>
<arg name="path_to_labels" default="$(find object_detection_tensorflow)/ERL2017-ERL2018-Emergency-Object-Detection/labels/label_map-opi-2018-ericard.pbtxt"/>
<arg name="num_classes" default="11"/> -->

<!-- <arg name="model_name" default="model-ERL2018-11classes-003"/>
<arg name="path_to_labels" default="$(find object_detection_tensorflow)/ERL2017-ERL2018-Emergency-Object-Detection/labels/label_map-opi-2018-ericard.pbtxt"/>
<arg name="num_classes" default="11"/> -->

<!--<node pkg="object_detection_tensorflow" type="object_detection_tensorflow.py" name="object_detection_tensorflow_node" output="screen">-->
<!--  <param name="camera_topic" value="$(arg camera_topic)"/>-->
<!--  <param name="models_dir" value="$(arg models_dir)"/>-->
<!--  <param name="model_name" value="$(arg model_name)"/>-->
<!--  <param name="path_to_labels" value="$(arg path_to_labels)"/>-->
<!--  <param name="num_classes" value="$(arg num_classes)"/>-->
<!--  <param name="rotate" value="False"/>-->
<!--  <param name="threshold" value="0.01"/>-->
<!--  <param name="render" value="True"/>-->
<!--</node>-->
<!-- <arg name="FPS" default="15"/>-->
<!-- <arg name="CalibrationFile" default="/home/robot/pointgrey.yaml"/>-->
<!-- <node pkg="pointgrey" type="grasshopper3" name="pointgrey_grasshopper3" output="screen">-->
<!--    <param name="fps" value="$(arg FPS)"/>-->
<!--    <param name="calibrationfile" value="$(arg CalibrationFile)"/>-->
<!--    <remap from="image_raw" to="/camera/image_color"/>-->
<!-- </node>-->
<!-- <node pkg="image_transport" type="republish" name="republish_rgb" args="raw in:=/camera/image_raw compressed out:=/camera/image_raw"/>-->
<!-- <include file="$(find pointgrey_camera_driver)/launch/camera.launch" /> dont use it -->
<!--  <include file="$(find realsense2_camera)/launch/rs_t265.launch">-->
<!--    <arg name="camera" value="t265"/>-->
<!--    <arg name="tf_prefix" value="t265"/>-->
<!--  </include>-->
<!--</launch>-->
